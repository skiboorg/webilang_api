# Generated by Django 3.2.6 on 2021-09-20 08:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, default='profile.svg', null=True, upload_to='user', verbose_name='Фото')),
                ('social_avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фото из профиля')),
                ('firstname', models.CharField(blank=True, default='Иван', max_length=50, null=True, verbose_name='Имя')),
                ('firstname_slug', models.CharField(blank=True, default='Иван', max_length=50, null=True, verbose_name='Имя транслит')),
                ('lastname', models.CharField(blank=True, default='Иванов', max_length=50, null=True, verbose_name='Фамилия')),
                ('lastname_slug', models.CharField(blank=True, default='Иванов', max_length=50, null=True, verbose_name='Фамилия транслит')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Эл. почта')),
                ('birthday', models.CharField(blank=True, max_length=50, null=True, verbose_name='Дата рождения')),
                ('country', models.CharField(blank=True, max_length=20, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=20, null=True, verbose_name='Город')),
                ('total_progress', models.IntegerField(default=0, verbose_name='Пройдено курса')),
                ('personal_lessons_left', models.IntegerField(default=0, verbose_name='Занятий осталось (индивидуальных)')),
                ('group_lessons_left', models.IntegerField(default=0, verbose_name='Занятий осталось (гупповых)')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О себе ')),
                ('last_online', models.DateTimeField(auto_now=True, null=True, verbose_name='Последний раз был онлайн')),
                ('is_online', models.BooleanField(default=False, editable=False, verbose_name='Онлайн?')),
                ('promo', models.CharField(blank=True, max_length=10, null=True, verbose_name='Промо-код')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Это учитель?')),
                ('is_time_24h', models.BooleanField(default=True, verbose_name='Время в формате 24')),
                ('is_email_verified', models.BooleanField(default=False, editable=False, verbose_name='EMail подтвержден?')),
                ('is_social_register', models.BooleanField(default=False, editable=False)),
                ('is_present', models.BooleanField(default=False, editable=False)),
                ('verify_code', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Код подтверждения')),
                ('channel', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('selected_reward', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Аватар',
                'verbose_name_plural': 'Аватарки',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Награда',
                'verbose_name_plural': 'Награды',
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(blank=True, max_length=50, null=True)),
                ('translate', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(blank=True, default=1)),
                ('reward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.reward')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_new', models.BooleanField(default=True)),
                ('is_selected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-is_new',),
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='chosen_avatar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.avatar'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
